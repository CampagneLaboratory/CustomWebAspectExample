package org.campagnelab.circles.model.web;

/*Generated by MPS */

import com.google.gwt.place.shared.Place;
import java.util.logging.Logger;
import com.google.gwt.activity.shared.Activity;
import com.google.gwt.place.shared.PlaceTokenizer;

public class SearchNodesPlace extends Place implements GenericPlace {
  private static Logger logger = Logger.getLogger("SearchNodesPlace");

  private String token_queryTerm;
  public SearchNodesPlace(String token_queryTerm) {
    this.token_queryTerm = token_queryTerm;
  }
  public String getToken_queryTerm() {
    return token_queryTerm;
  }
  public boolean hasAllTokens() {
    boolean result = true;
    result &= getToken_queryTerm() != null;
    return result;
  }
  @Override
  public Activity getActivity(ClientFactory clientFactory) {
    logger.info("getActivity for Place=" + "SearchNodesPlace");
    return new ViewSearchNodesActivity(this, clientFactory);
  }

  public static class Tokenizer implements PlaceTokenizer<SearchNodesPlace> {
    private static Logger logger = Logger.getLogger("Tokenizer");
    @Override
    public String getToken(SearchNodesPlace place) {
      StringBuffer result = new StringBuffer();
      result.append("queryTerm");
      result.append(":");
      // TODO obtain the value of the token from the WebModel field.  
      result.append(place.getToken_queryTerm());
      logger.info("tokens=" + result);
      return result.toString();
    }
    @Override
    public SearchNodesPlace getPlace(String token) {
      logger.info("getPlace token=" + token);
      String[] tokens = token.split(":");
      return new SearchNodesPlace(tokens[1]);
    }
  }

}
