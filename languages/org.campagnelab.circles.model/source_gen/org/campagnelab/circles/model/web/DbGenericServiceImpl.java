package org.campagnelab.circles.model.web;

/*Generated by MPS */

import com.google.gwt.user.server.rpc.RemoteServiceServlet;
import com.orientechnologies.orient.core.db.ODatabaseRecordThreadLocal;
import com.orientechnologies.orient.core.db.document.ODatabaseDocumentTx;
import java.util.List;
import com.orientechnologies.orient.core.sql.query.OSQLSynchQuery;
import com.orientechnologies.orient.core.record.impl.ODocument;
import java.util.ArrayList;

public class DbGenericServiceImpl extends RemoteServiceServlet implements DbGenericService {
  @Override
  public Module_Bean getModule(String moduleId) {
    if (ODatabaseRecordThreadLocal.INSTANCE == null) {
      // Calling this manually does prevent an initialization issue. 
      // see https://github.com/orientechnologies/orientdb/issues/5146#issuecomment-149212850 
    }
    // TODO use pool 
    ODatabaseDocumentTx db = new ODatabaseDocumentTx("remote:127.0.0.1/circles");
    db.open("admin", "admin");
    try {
      System.out.println("Looking up " + "lookupModule");
      List result = db.query(new OSQLSynchQuery("select * from org_C_campagnelab_C_circles_C_model_C_structure_C_Module where name =?"), new Object[]{moduleId});
      return (result != null && result.size() == 1 ? Module_DbToPojoHelper.transform((ODocument) result.get(0)) : null);

    } finally {
      db.close();
    }
  }
  @Override
  public Solution_Bean getSolution(String name) {
    if (ODatabaseRecordThreadLocal.INSTANCE == null) {
      // Calling this manually does prevent an initialization issue. 
      // see https://github.com/orientechnologies/orientdb/issues/5146#issuecomment-149212850 
    }
    // TODO use pool 
    ODatabaseDocumentTx db = new ODatabaseDocumentTx("remote:127.0.0.1/circles");
    db.open("admin", "admin");
    try {
      System.out.println("Looking up " + "lookupSolution");
      List result = db.query(new OSQLSynchQuery("select * from org_C_campagnelab_C_circles_C_model_C_structure_C_Solution where name =?"), new Object[]{name});
      return (result != null && result.size() == 1 ? Solution_DbToPojoHelper.transform((ODocument) result.get(0)) : null);

    } finally {
      db.close();
    }
  }
  @Override
  public Project_Bean getProject(String projectName) {
    if (ODatabaseRecordThreadLocal.INSTANCE == null) {
      // Calling this manually does prevent an initialization issue. 
      // see https://github.com/orientechnologies/orientdb/issues/5146#issuecomment-149212850 
    }
    // TODO use pool 
    ODatabaseDocumentTx db = new ODatabaseDocumentTx("remote:127.0.0.1/circles");
    db.open("admin", "admin");
    try {
      System.out.println("Looking up " + "lookupProject");
      List result = db.query(new OSQLSynchQuery("select * from org_C_campagnelab_C_circles_C_model_C_structure_C_Project where name= ?"), new Object[]{projectName});
      return (result != null && result.size() == 1 ? Project_DbToPojoHelper.transform((ODocument) result.get(0)) : null);

    } finally {
      db.close();
    }
  }
  @Override
  public Model_Bean getModel(String modelId) {
    if (ODatabaseRecordThreadLocal.INSTANCE == null) {
      // Calling this manually does prevent an initialization issue. 
      // see https://github.com/orientechnologies/orientdb/issues/5146#issuecomment-149212850 
    }
    // TODO use pool 
    ODatabaseDocumentTx db = new ODatabaseDocumentTx("remote:127.0.0.1/circles");
    db.open("admin", "admin");
    try {
      System.out.println("Looking up " + "lookupModel");
      List result = db.query(new OSQLSynchQuery("select * from org_C_campagnelab_C_circles_C_model_C_structure_C_Model where modelId= ?"), new Object[]{modelId});
      return (result != null && result.size() == 1 ? Model_DbToPojoHelper.transform((ODocument) result.get(0)) : null);

    } finally {
      db.close();
    }
  }
  @Override
  public Root_Bean getRoot(String id) {
    if (ODatabaseRecordThreadLocal.INSTANCE == null) {
      // Calling this manually does prevent an initialization issue. 
      // see https://github.com/orientechnologies/orientdb/issues/5146#issuecomment-149212850 
    }
    // TODO use pool 
    ODatabaseDocumentTx db = new ODatabaseDocumentTx("remote:127.0.0.1/circles");
    db.open("admin", "admin");
    try {
      System.out.println("Looking up " + "lookupRoot");
      List result = db.query(new OSQLSynchQuery("select * from org_C_campagnelab_C_circles_C_model_C_structure_C_Root where id= ?"), new Object[]{id});
      return (result != null && result.size() == 1 ? Root_DbToPojoHelper.transform((ODocument) result.get(0)) : null);

    } finally {
      db.close();
    }
  }
  @Override
  public List<Root_Bean> getListRoot(String queryTerm) {
    if (ODatabaseRecordThreadLocal.INSTANCE == null) {
      // Calling this manually does prevent an initialization issue. 
      // see https://github.com/orientechnologies/orientdb/issues/5146#issuecomment-149212850 
    }
    // TODO use pool 
    ODatabaseDocumentTx db = new ODatabaseDocumentTx("remote:127.0.0.1/circles");
    db.open("admin", "admin");
    try {
      System.out.println("Looking up " + "Root");
      System.out.println("Query is " + "select * from org_C_campagnelab_C_circles_C_model_C_structure_C_Root where name like '%?%'");
      List result = db.query(new OSQLSynchQuery(String.format("select * from org_C_campagnelab_C_circles_C_model_C_structure_C_Root where name like '%%%s%%'", queryTerm)));
      List<Root_Bean> beans = new ArrayList<Root_Bean>();
      System.out.println("Result.size=" + result.size());
      for (Object element : result) {
        ODocument doc = ((ODocument) element);
        beans.add(Root_DbToPojoHelper.transform(doc));
      }
      return beans;
    } finally {
      db.close();
    }
  }
  @Override
  public List<RootRef_Bean> getListRootRef(String queryTerm) {
    if (ODatabaseRecordThreadLocal.INSTANCE == null) {
      // Calling this manually does prevent an initialization issue. 
      // see https://github.com/orientechnologies/orientdb/issues/5146#issuecomment-149212850 
    }
    // TODO use pool 
    ODatabaseDocumentTx db = new ODatabaseDocumentTx("remote:127.0.0.1/circles");
    db.open("admin", "admin");
    try {
      System.out.println("Looking up " + "RootRef");
      System.out.println("Query is " + "select * from Root where name like '%?%'");
      List result = db.query(new OSQLSynchQuery(String.format("select * from org_C_campagnelab_C_circles_C_model_C_structure_C_Root where name like '%%%s%%'", queryTerm)));
      List<RootRef_Bean> beans = new ArrayList<RootRef_Bean>();
      System.out.println("Result.size=" + result.size());
      for (Object element : result) {
        ODocument doc = ((ODocument) element);
        beans.add(RootRef_DbToPojoHelper.transform(doc));
      }
      return beans;
    } finally {
      db.close();
    }
  }
}
