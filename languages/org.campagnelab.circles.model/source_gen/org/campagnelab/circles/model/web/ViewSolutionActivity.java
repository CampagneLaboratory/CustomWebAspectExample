package org.campagnelab.circles.model.web;

/*Generated by MPS */

import com.google.gwt.activity.shared.AbstractActivity;
import com.google.gwt.user.client.ui.HTML;
import java.util.logging.Logger;
import com.google.gwt.user.client.rpc.AsyncCallback;
import com.google.gwt.user.client.ui.AcceptsOneWidget;
import com.google.gwt.event.shared.EventBus;

public class ViewSolutionActivity extends AbstractActivity {
  protected final ClientFactory clientFactory;
  protected Solution_WebModel model;
  protected Solution_WebMapper mapper;
  protected HTML htmlWrapper = new HTML("<div/>");
  protected Logger logger = Logger.getLogger("ViewSolutionActivity");

  public ViewSolutionActivity(ViewModulePlace place, ClientFactory factory) {
    // Get the factory reference 
    this.clientFactory = factory;
    logger.info("Creating activity" + "ViewSolutionActivity");
    if (place.hasAllTokens()) {
      AsyncCallback<Solution_Bean> async = new AsyncCallback<Solution_Bean>() {
        @Override
        public void onFailure(Throwable caught) {
          logger.info("Failed to retrieve from DB " + caught.getMessage());
        }
        @Override
        public void onSuccess(Solution_Bean result) {
          // create a model for the bean, then a mapper for this model: 
          model = SolutionToWebModel.transform(result, clientFactory);
          model.setClientFactory(clientFactory);
          mapper = new Solution_WebMapper(model);
          mapper.attachRoot();
          htmlWrapper.getElement().appendChild(mapper.getTarget().getElement());
        }
      };
      clientFactory.getDbService().getSolution("playground", async);
    }


  }
  /**
   * Only used in MPS generator templates.
   */
  protected ViewSolutionActivity() {
    clientFactory = null;
  }
  @Override
  public String mayStop() {
    //  do not ask for confirmation when stopping 
    return null;
  }
  @Override
  public void onStop() {
    super.onStop();
  }
  @Override
  public void start(AcceptsOneWidget panel, EventBus eventBus) {
    // Attach this view to the application container 
    // sds $("#main").append 
    assert clientFactory != null : "NULL clientFactory";
    panel.setWidget(htmlWrapper);
    logger.info("Starting activity" + "ViewSolutionActivity");
  }
}
