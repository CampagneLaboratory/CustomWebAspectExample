package org.campagnelab.circles.aspect;

/*Generated by MPS */

import jetbrains.mps.smodel.language.LanguageRuntime;
import jetbrains.mps.smodel.adapter.ids.SLanguageId;
import java.util.UUID;
import java.util.Collection;
import jetbrains.mps.generator.runtime.TemplateModule;
import jetbrains.mps.generator.runtime.TemplateUtil;
import jetbrains.mps.smodel.runtime.ILanguageAspect;
import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;

public class Language extends LanguageRuntime {
  public static String MODULE_REF = "8c40f9f4-b3bd-42d0-8b65-8e644273493c(org.campagnelab.circles.aspect)";
  public Language() {
  }
  @Override
  public String getNamespace() {
    return "org.campagnelab.circles.aspect";
  }

  @Override
  public int getVersion() {
    return 0;
  }

  public SLanguageId getId() {
    return new SLanguageId(UUID.fromString("8c40f9f4-b3bd-42d0-8b65-8e644273493c"));
  }
  @Override
  protected String[] getExtendedLanguageIDs() {
    return new String[]{};
  }
  @Override
  public Collection<TemplateModule> getGenerators() {
    return TemplateUtil.<TemplateModule>asCollection(TemplateUtil.createInterpretedGenerator(this, "b2b1246e-f436-4de9-9e47-0ba9404ea6b3(org.campagnelab.circles.aspect#2986108014587568802)"));
  }
  @Override
  protected <T extends ILanguageAspect> T createAspect(Class<T> aspectClass) {
    if (aspectClass == EditorAspectDescriptor.class) {
      return ((T) new EditorAspectDescriptorBase());
    }
    return super.createAspect(aspectClass);
  }
}
