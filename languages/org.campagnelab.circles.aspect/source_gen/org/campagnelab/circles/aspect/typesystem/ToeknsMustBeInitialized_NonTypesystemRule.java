package org.campagnelab.circles.aspect.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.errors.messageTargets.MessageTarget;
import jetbrains.mps.errors.messageTargets.NodeMessageTarget;
import jetbrains.mps.errors.IErrorReporter;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ToeknsMustBeInitialized_NonTypesystemRule extends AbstractNonTypesystemRule_Runtime implements NonTypesystemRule_Runtime {
  public ToeknsMustBeInitialized_NonTypesystemRule() {
  }
  public void applyRule(final SNode cellModel_Link, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    if (ListSequence.fromList(SLinkOperations.getChildren(cellModel_Link, MetaAdapterFactory.getContainmentLink(0x8c40f9f4b3bd42d0L, 0x8b658e644273493cL, 0x4ff6b12e4c43d11bL, 0x4dafaaf043f5ef76L, "tokenInitializations"))).count() != ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(cellModel_Link, MetaAdapterFactory.getReferenceLink(0x8c40f9f4b3bd42d0L, 0x8b658e644273493cL, 0x4ff6b12e4c43d11bL, 0x4ff6b12e4c43e4caL, "destination")), MetaAdapterFactory.getContainmentLink(0x8c40f9f4b3bd42d0L, 0x8b658e644273493cL, 0x658b57cc0e19886eL, 0x658b57cc0e198874L, "tokens"))).count()) {
      {
        MessageTarget errorTarget = new NodeMessageTarget();
        IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(SLinkOperations.getTarget(cellModel_Link, MetaAdapterFactory.getReferenceLink(0x8c40f9f4b3bd42d0L, 0x8b658e644273493cL, 0x4ff6b12e4c43d11bL, 0x4ff6b12e4c43e4caL, "destination")), "The destination place requires tokens. Please initialize them in the inspector.", "r:51007175-a861-4f80-affa-daeb5e152c52(org.campagnelab.circles.aspect.typesystem)", "5597880810754296895", null, errorTarget);
      }
    }
    if (SLinkOperations.getTarget(cellModel_Link, MetaAdapterFactory.getReferenceLink(0x8c40f9f4b3bd42d0L, 0x8b658e644273493cL, 0x4ff6b12e4c43d11bL, 0x4ff6b12e4c43e4caL, "destination")) != null) {
      for (final SNode token : ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(cellModel_Link, MetaAdapterFactory.getReferenceLink(0x8c40f9f4b3bd42d0L, 0x8b658e644273493cL, 0x4ff6b12e4c43d11bL, 0x4ff6b12e4c43e4caL, "destination")), MetaAdapterFactory.getContainmentLink(0x8c40f9f4b3bd42d0L, 0x8b658e644273493cL, 0x658b57cc0e19886eL, 0x658b57cc0e198874L, "tokens")))) {
        if (ListSequence.fromList(SLinkOperations.getChildren(cellModel_Link, MetaAdapterFactory.getContainmentLink(0x8c40f9f4b3bd42d0L, 0x8b658e644273493cL, 0x4ff6b12e4c43d11bL, 0x4dafaaf043f5ef76L, "tokenInitializations"))).where(new IWhereFilter<SNode>() {
          public boolean accept(SNode it) {
            return (SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0x8c40f9f4b3bd42d0L, 0x8b658e644273493cL, 0x4dafaaf043f5ef79L, 0x4dafaaf043f5ef7aL, "token")) != null);
          }
        }).select(new ISelector<SNode, SNode>() {
          public SNode select(SNode it) {
            return SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0x8c40f9f4b3bd42d0L, 0x8b658e644273493cL, 0x4dafaaf043f5ef79L, 0x4dafaaf043f5ef7aL, "token"));
          }
        }).select(new ISelector<SNode, String>() {
          public String select(SNode it) {
            return SPropertyOperations.getString(it, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"));
          }
        }).all(new IWhereFilter<String>() {
          public boolean accept(String it) {
            return neq_vgky3e_a0a0a0a0a0a0a0b0b(it, SPropertyOperations.getString(token, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
          }
        })) {
          {
            MessageTarget errorTarget = new NodeMessageTarget();
            IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(cellModel_Link, "Token " + SPropertyOperations.getString(token, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")) + " must be initialized.", "r:51007175-a861-4f80-affa-daeb5e152c52(org.campagnelab.circles.aspect.typesystem)", "5597880810754320032", null, errorTarget);
          }
        }
      }

    }
  }
  public SAbstractConcept getApplicableConcept() {
    return MetaAdapterFactory.getConcept(0x8c40f9f4b3bd42d0L, 0x8b658e644273493cL, 0x4ff6b12e4c43d11bL, "org.campagnelab.circles.aspect.structure.CellModel_Link");
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }
  private static boolean neq_vgky3e_a0a0a0a0a0a0a0b0b(Object a, Object b) {
    return !(((a != null ? a.equals(b) : a == b)));
  }
}
