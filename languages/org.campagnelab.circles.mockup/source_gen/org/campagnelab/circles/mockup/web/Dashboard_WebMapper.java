package org.campagnelab.circles.mockup.web;

/*Generated by MPS */

import jetbrains.jetpad.mapper.Mapper;
import jetbrains.jetpad.mapper.Synchronizers;
import jetbrains.jetpad.mapper.gwt.DomUtil;
import jetbrains.jetpad.mapper.MapperFactory;
import org.webapp.languages.jetbrains_mps_lang_core.client.models.BaseConcept_WebModel;

public class Dashboard_WebMapper extends Mapper<Dashboard_WebModel, Dashboard_WebView> {

  public Dashboard_WebMapper(Dashboard_WebModel model) {
    super(model, new Dashboard_WebView());
    // Connect events to view here 
  }
  @Override
  protected void registerSynchronizers(Mapper.SynchronizersConfiguration conf) {
    super.registerSynchronizers(conf);
    //  Insertion point for add synchronizer: 
    conf.add(Synchronizers.forPropsTwoWay(getSource().queryTerm, DomUtil.editableTextOf(getTarget().queryTerm)));

    conf.add(Synchronizers.forObservableRole(this, getSource().containedCircles, DomUtil.withAnimatedElementChildren(getTarget().containedCircles), new MapperFactory() {
      public Mapper createMapper(Object model) {
        // need to find a way to use the global WebModelFactory, not the one from a specific module.  
        return WebModelFactory.createMapper((BaseConcept_WebModel) model);
      }
    }));
    //  map references like %circles% -> name 



  }

}
