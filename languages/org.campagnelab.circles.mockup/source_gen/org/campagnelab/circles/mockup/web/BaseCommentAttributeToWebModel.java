package org.campagnelab.circles.mockup.web;

/*Generated by MPS */

import java.util.logging.Logger;
import org.webapp.languages.jetbrains_mps_lang_core.shared.beans.BaseConcept_Bean;
import org.webapp.languages.jetbrains_mps_lang_core.client.models.BaseConcept_WebModel;

public class BaseCommentAttributeToWebModel {
  private static Logger logger = Logger.getLogger("BaseCommentAttributeToWebModel");

  public static BaseCommentAttribute_WebModel create(BaseCommentAttribute_Bean bean) {
    BaseCommentAttribute_WebModel model = (BaseCommentAttribute_WebModel) WebModelFactory.createWebModel(bean);
    return model;
  }
  public static void transfer(BaseCommentAttribute_Bean source, BaseCommentAttribute_WebModel destination) {
    if (source == null) {
      return;
    }
    ChildAttributeToWebModel.transfer(source, destination);
    
    // ignore interface ;
    
    // ignore interface ;
    
    // ignore interface ;
    
    // ignore interface ;
    // transfer children: 
    if (source.commentedNode != null) {
      for (BaseConcept_Bean childBean : source.commentedNode) {
        if (childBean != null) {
          BaseConcept_WebModel destChild = BaseConceptToWebModel.create(childBean);
          BaseConceptToWebModel.transfer(childBean, destChild);
          destination.commentedNode.add(destChild);
        }
      }
    }

    // transfer references: 

  }

  public static BaseCommentAttribute_WebModel transform(BaseCommentAttribute_Bean bean, ClientFactoryInterface clientFactory) {
    if (bean == null) {
      return null;
    }
    BaseCommentAttribute_WebModel model = create(bean);
    if (model != null) {
      model.setClientFactory(clientFactory);
    }
    transfer(bean, model);
    return model;
  }
}
