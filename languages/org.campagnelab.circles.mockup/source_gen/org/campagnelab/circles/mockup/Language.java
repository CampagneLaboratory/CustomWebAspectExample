package org.campagnelab.circles.mockup;

/*Generated by MPS */

import jetbrains.mps.smodel.language.LanguageRuntime;
import jetbrains.mps.smodel.adapter.ids.SLanguageId;
import java.util.UUID;
import java.util.Collection;
import jetbrains.mps.generator.runtime.TemplateModule;
import jetbrains.mps.smodel.runtime.ILanguageAspect;
import jetbrains.mps.smodel.runtime.BehaviorAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConstraintsAspectDescriptor;
import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import org.campagnelab.circles.mockup.editor.EditorAspectDescriptorImpl;
import jetbrains.mps.intentions.IntentionAspectDescriptor;
import org.campagnelab.circles.mockup.intentions.IntentionsDescriptor;
import jetbrains.mps.smodel.runtime.StructureAspectDescriptor;
import org.campagnelab.circles.aspect.runtime.WebLanguageAspectDescriptor;
import org.campagnelab.circles.mockup.web.WebAspectDescriptor;

public class Language extends LanguageRuntime {
  public static String MODULE_REF = "3dc3d3d3-b034-480c-8b21-d7a88903974b(org.campagnelab.circles.mockup)";
  public Language() {
  }
  @Override
  public String getNamespace() {
    return "org.campagnelab.circles.mockup";
  }

  @Override
  public int getVersion() {
    return 0;
  }

  public SLanguageId getId() {
    return new SLanguageId(UUID.fromString("3dc3d3d3-b034-480c-8b21-d7a88903974b"));
  }
  @Override
  protected String[] getExtendedLanguageIDs() {
    return new String[]{};
  }
  @Override
  public Collection<TemplateModule> getGenerators() {
    return null;
  }
  @Override
  protected <T extends ILanguageAspect> T createAspect(Class<T> aspectClass) {
    if (aspectClass == BehaviorAspectDescriptor.class) {
      return (T) new org.campagnelab.circles.mockup.behavior.BehaviorAspectDescriptor();
    }
    if (aspectClass == ConstraintsAspectDescriptor.class) {
      return (T) new org.campagnelab.circles.mockup.constraints.ConstraintsAspectDescriptor();
    }
    if (aspectClass == EditorAspectDescriptor.class) {
      return (T) new EditorAspectDescriptorImpl();
    }
    if (aspectClass == IntentionAspectDescriptor.class) {
      return (T) new IntentionsDescriptor();
    }
    if (aspectClass == StructureAspectDescriptor.class) {
      return (T) new org.campagnelab.circles.mockup.structure.StructureAspectDescriptor();
    }
    if (aspectClass.getName().equals("org.campagnelab.circles.aspect.runtime.WebLanguageAspectDescriptor")) {
      if (aspectClass == WebLanguageAspectDescriptor.class) {
        return (T) new WebAspectDescriptor();
      }
    }
    return super.createAspect(aspectClass);
  }
}
